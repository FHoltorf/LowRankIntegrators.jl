var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = LowRankIntegrators","category":"page"},{"location":"#LowRankIntegrators","page":"Home","title":"LowRankIntegrators","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for LowRankIntegrators.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [LowRankIntegrators]","category":"page"},{"location":"#LowRankIntegrators.DLRIntegrator","page":"Home","title":"LowRankIntegrators.DLRIntegrator","text":"Integrator computing solution to a dynamic low rank approximation problem\n\n\n\n\n\n","category":"type"},{"location":"#LowRankIntegrators.DLRSolution","page":"Home","title":"LowRankIntegrators.DLRSolution","text":"Solution object that tracks the evolution of a low rank approximation\n\n\n\n\n\n","category":"type"},{"location":"#LowRankIntegrators.MatrixDEProblem","page":"Home","title":"LowRankIntegrators.MatrixDEProblem","text":"Problem of approximating the solution of a matrix differential equation\ndy/dt = f(t,y) with y(0) = y₀ on [t0,tf] with a low rank factorization \ny(t) ≈ u(t) = U(t)S(t)V(t)' where U(t) and V(t) are orthonormal bases approximating \nrange and co-range of y(t).\n\n\n\n\n\n","category":"type"},{"location":"#LowRankIntegrators.MatrixDataProblem","page":"Home","title":"LowRankIntegrators.MatrixDataProblem","text":"Problem of tracking the low rank decomposition u(t) = U(t)S(t) V(t)' of a \ntime-dependent (or streamed) matrix y(t) with t ∈ [t_0, t_f].\n\n\n\n\n\n","category":"type"},{"location":"#LowRankIntegrators.SVDLikeApproximation","page":"Home","title":"LowRankIntegrators.SVDLikeApproximation","text":"X = U*S*V'\n\nSVD like factorization of a low rank matrix into factors U ∈ ℝⁿˣʳ, S ∈ ℝʳˣʳ, V ∈ ℝᵐˣʳ. \nThe columns of U span the range of X, the colomuns of V span the co-range of X and S describes the map between\nco-range and range. The factorization is non-unique and U and V need not be orthogonal! \nHowever, often U and V are chosen orthogonal to allow for cheap (pseudo)inversion. In that case, note that\northogonality of U and V is not guaranteed to and in fact will rarely be preserved under the operations that\nare supported (multiplication, addition, etc.)\n\n\n\n\n\n","category":"type"},{"location":"#LowRankIntegrators.TwoFactorApproximation","page":"Home","title":"LowRankIntegrators.TwoFactorApproximation","text":"X = U*Z'\n\nTwo factor factorization of a low rank matrix into factors U ∈ ℝⁿˣʳ and Z ∈ ℝᵐˣʳ. \nU should span the range of X while Z spans the co-range. The factorization is non-unique and\nU need not be orthogonal! However, U is often chosen orthogonal for cheap (pseudo)inversion. In that case,\nnote that orthogonality of U is not guaranteed to and in fact will rarely be preserved under the operations that\nare supported (multiplication, addition, etc.). In order to reorthonormalize U, simply call `orthonormalize!(X, alg)`\nwhere alg refers to the algorithm used to compute the orthonormalization: \n    * GradientDescent() \n    * QR()\n    * SVD()\n\n\n\n\n\n","category":"type"},{"location":"#LowRankIntegrators.solve-Tuple{LowRankIntegrators.AbstractDLRProblem, LowRankIntegrators.AbstractDLRAlgorithm, Any}","page":"Home","title":"LowRankIntegrators.solve","text":"solves the given problem with the specified algorithm and step size\n\n\n\n\n\n","category":"method"}]
}
